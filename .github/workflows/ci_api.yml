name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9, 3.11]

    env:
      PROVIDER_URI_MAINNET: ${{ secrets.PROVIDER_URI_MAINNET }}
      PROVIDER_URI_GOERLI: ${{ secrets.PROVIDER_URI_GOERLI }}
      PROVIDER_URI_SEPOLIA: ${{ secrets.PROVIDER_URI_SEPOLIA }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies
        working-directory: ./api
        run: poetry install

      - name: Lint
        working-directory: ./api
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests mocked
        working-directory: ./api
        run: poetry run pytest -vv --durations=0 --cov-report term-missing --cov=./

      - name: Run tests
        working-directory: ./api
        run: MONKEYPATCH=0 poetry run pytest -vv --durations=0

      - name: Generate coverage badge
        run: coverage-badge -fo coverage_badge.svg

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github-actions
          author_email: actions@github.com
          message: 'Update coverage badge'
          add: 'coverage_badge.svg'
