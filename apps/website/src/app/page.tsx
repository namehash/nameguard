'use client'

import Image from "next/image";
import { Highlight, themes } from "prism-react-renderer";
import { PrismTheme } from "prism-react-renderer";
import chat_img from "../../public/assets/chat.png";
import React, {Fragment} from "react";
import { CheckCircleIcon } from '@heroicons/react/24/solid';

export default function Home() {
    const exampleCode =
        `<figure class="md:flex bg-slate-100 rounded-xl p-8 md:p-0 dark:bg-slate-800"/>
            <img class="w-24 h-24 md:w-48 md:h-auto md:rounded-none 
            rounded-full mx-auto" src="/sarah-dayan.jpg" alt="" width="384" 
            height="512">
                <div class="pt-6 md:p-8 text-center md:text-left space-y-4">
                    <blockquote>
                        <p class="text-lg font-medium">`;
  return (
    <>
      <Header />
      <div className="md:p-32 relative">
        <QuickStartSection />
        <ReadySection
            sectionTargetSvgPath={"M7.1875 10C7.1875 10.1726 7.04759 10.3125 6.875 10.3125C6.70241 10.3125 6.5625 10.1726 6.5625 10C6.5625 9.82741 6.70241 9.6875 6.875 9.6875C7.04759 9.6875 7.1875 9.82741 7.1875 10ZM7.1875 10H6.875M10.3125 10C10.3125 10.1726 10.1726 10.3125 10 10.3125C9.82741 10.3125 9.6875 10.1726 9.6875 10C9.6875 9.82741 9.82741 9.6875 10 9.6875C10.1726 9.6875 10.3125 9.82741 10.3125 10ZM10.3125 10H10M13.4375 10C13.4375 10.1726 13.2976 10.3125 13.125 10.3125C12.9524 10.3125 12.8125 10.1726 12.8125 10C12.8125 9.82741 12.9524 9.6875 13.125 9.6875C13.2976 9.6875 13.4375 9.82741 13.4375 10ZM13.4375 10H13.125M17.5 10C17.5 13.797 14.1421 16.875 10 16.875C9.26044 16.875 8.54588 16.7769 7.87098 16.5941C7.05847 17.1649 6.06834 17.5 5 17.5C4.83398 17.5 4.6698 17.4919 4.50806 17.4761C4.375 17.4631 4.24316 17.4449 4.11316 17.4216C4.5161 16.9461 4.80231 16.3689 4.92824 15.734C5.00378 15.3531 4.81725 14.9832 4.53903 14.7124C3.27475 13.4818 2.5 11.8238 2.5 10C2.5 6.20304 5.85786 3.125 10 3.125C14.1421 3.125 17.5 6.20304 17.5 10Z"}
            sectionTargetClientMessage={"For Web3 messengers"}
            sectionHeader={<Fragment>Protect from<br/>impersonation attacks</Fragment>}
            sectionDescription={`Current primary name lookups still display deceptive look-alike
              names such as "vitalík.eth" that go undetected during
              \`ens_normalize\` checks. NameGuard's advanced
              'canonical name' algorithm exposes copycat attempts
              and ensures a safe messaging experience for all.`}
            sectionBackgroundName={"bg-green_background"}
            isCodeOnTheLeft={false}
            codeSnippet={exampleCode}
        />
      <ReadySection
          sectionTargetSvgPath={"M7.1875 10C7.1875 10.1726 7.04759 10.3125 6.875 10.3125C6.70241 10.3125 6.5625 10.1726 6.5625 10C6.5625 9.82741 6.70241 9.6875 6.875 9.6875C7.04759 9.6875 7.1875 9.82741 7.1875 10ZM7.1875 10H6.875M10.3125 10C10.3125 10.1726 10.1726 10.3125 10 10.3125C9.82741 10.3125 9.6875 10.1726 9.6875 10C9.6875 9.82741 9.82741 9.6875 10 9.6875C10.1726 9.6875 10.3125 9.82741 10.3125 10ZM10.3125 10H10M13.4375 10C13.4375 10.1726 13.2976 10.3125 13.125 10.3125C12.9524 10.3125 12.8125 10.1726 12.8125 10C12.8125 9.82741 12.9524 9.6875 13.125 9.6875C13.2976 9.6875 13.4375 9.82741 13.4375 10ZM13.4375 10H13.125M17.5 10C17.5 13.797 14.1421 16.875 10 16.875C9.26044 16.875 8.54588 16.7769 7.87098 16.5941C7.05847 17.1649 6.06834 17.5 5 17.5C4.83398 17.5 4.6698 17.4919 4.50806 17.4761C4.375 17.4631 4.24316 17.4449 4.11316 17.4216C4.5161 16.9461 4.80231 16.3689 4.92824 15.734C5.00378 15.3531 4.81725 14.9832 4.53903 14.7124C3.27475 13.4818 2.5 11.8238 2.5 10C2.5 6.20304 5.85786 3.125 10 3.125C14.1421 3.125 17.5 6.20304 17.5 10Z"}
          sectionTargetClientMessage={"For Web3 messengers"}
          sectionHeader={<Fragment>Alert from deceptive<br />impersonation attacks</Fragment>}
          sectionDescription={`Current primary name lookups still display deceptive look-alike
          names such as "vitalík.eth" that go undetected during
          \`ens_normalize\` checks. NameGuard's advanced
          'canonical name' algorithm exposes copycat attempts
          and ensures a safe messaging experience for all.`}
          sectionBackgroundName={"bg-purple_background"}
          isCodeOnTheLeft={true}
          codeSnippet={exampleCode}
          integrationsPanel={
          <div className={"inline-flex items-center gap-6 z-10"}>
              <p className={"text-gray-500 text-lg leading-6 font-normal not-italic"}>
                  Composable integrations include
              </p>
              <svg xmlns="http://www.w3.org/2000/svg" width="140" height="36" viewBox="0 0 140 36" fill="none">
                  <path d="M32 18C32 26.8361 24.8361 34 16 34C7.16394 34 0 26.8361 0 18C0 9.16394 7.16394 2 16 2C24.8379 2 32 9.16394 32 18Z" fill="#2081E2"/>
                  <path d="M7.89396 18.5375L7.96298 18.429L12.1252 11.9177C12.1861 11.8224 12.3291 11.8322 12.3751 11.9358C13.0704 13.4942 13.6704 15.4323 13.3893 16.6389C13.2693 17.1353 12.9406 17.8076 12.5707 18.429C12.523 18.5194 12.4704 18.6082 12.4145 18.6937C12.3882 18.7331 12.3438 18.7561 12.2962 18.7561H8.01559C7.90052 18.7561 7.83312 18.6312 7.89396 18.5375Z" fill="white"/>
                  <path d="M26.4469 19.7474V20.7781C26.4469 20.8373 26.4107 20.8899 26.3581 20.9129C26.036 21.051 24.9329 21.5573 24.4743 22.1951C23.3039 23.8242 22.4096 26.1535 20.4107 26.1535H12.0714C9.11581 26.1535 6.7207 23.7502 6.7207 20.7847V20.6893C6.7207 20.6104 6.7848 20.5463 6.86371 20.5463H11.5125C11.6046 20.5463 11.672 20.6318 11.6638 20.7222C11.6309 21.0247 11.6868 21.3337 11.8298 21.6148C12.106 22.1754 12.678 22.5255 13.2961 22.5255H15.5975V20.7288H13.3224C13.2057 20.7288 13.1367 20.594 13.2041 20.4987C13.2287 20.4608 13.2567 20.4214 13.2862 20.377C13.5016 20.0713 13.809 19.5962 14.1148 19.0554C14.3235 18.6904 14.5257 18.3008 14.6884 17.9096C14.7213 17.8389 14.7476 17.7666 14.7739 17.6959C14.8183 17.5709 14.8644 17.4542 14.8972 17.3375C14.9301 17.2389 14.9564 17.1353 14.9827 17.0383C15.06 16.7063 15.0928 16.3545 15.0928 15.9896C15.0928 15.8466 15.0863 15.697 15.0731 15.5539C15.0665 15.3978 15.0468 15.2416 15.0271 15.0854C15.0139 14.9474 14.9893 14.8109 14.963 14.6679C14.9301 14.4591 14.8841 14.252 14.8315 14.0432L14.8134 13.9644C14.7739 13.8213 14.7411 13.6849 14.695 13.5419C14.5652 13.0931 14.4156 12.6558 14.2578 12.2465C14.2002 12.0838 14.1345 11.9276 14.0687 11.7715C13.9717 11.5364 13.8731 11.3227 13.7827 11.1205C13.7367 11.0284 13.6972 10.9446 13.6578 10.8591C13.6134 10.7621 13.5674 10.6651 13.5213 10.5731C13.4884 10.5024 13.4506 10.4366 13.4243 10.3709L13.1432 9.85142C13.1038 9.78073 13.1695 9.69689 13.2468 9.71827L15.0057 10.195H15.0107C15.0139 10.195 15.0156 10.1966 15.0172 10.1966L15.249 10.2607L15.5038 10.3331L15.5975 10.3594V9.31389C15.5975 8.80921 16.0019 8.3999 16.5016 8.3999C16.7515 8.3999 16.9783 8.50182 17.1411 8.66784C17.3038 8.83389 17.4057 9.06073 17.4057 9.31389V10.8657L17.5932 10.9183C17.6079 10.9232 17.6227 10.9298 17.6359 10.9396C17.6819 10.9742 17.7476 11.0251 17.8315 11.0876C17.8972 11.1402 17.9679 11.2043 18.0534 11.2701C18.2227 11.4065 18.4249 11.5824 18.6468 11.7846C18.706 11.8356 18.7636 11.8882 18.8162 11.9408C19.1022 12.2071 19.4228 12.5194 19.7285 12.8646C19.814 12.9616 19.8978 13.0602 19.9833 13.1638C20.0688 13.269 20.1592 13.3725 20.2381 13.4761C20.3417 13.6142 20.4534 13.7572 20.5504 13.9068C20.5964 13.9775 20.6491 14.0498 20.6934 14.1205C20.8184 14.3095 20.9285 14.5052 21.0337 14.7008C21.0781 14.7912 21.1241 14.8898 21.1636 14.9868C21.2803 15.2482 21.3724 15.5145 21.4315 15.7808C21.4496 15.8383 21.4628 15.9008 21.4693 15.9567V15.9699C21.4891 16.0487 21.4956 16.1326 21.5022 16.218C21.5285 16.4909 21.5154 16.7638 21.4562 17.0383C21.4315 17.1551 21.3987 17.2652 21.3592 17.3819C21.3197 17.4937 21.2803 17.6104 21.2293 17.7205C21.1307 17.949 21.014 18.1775 20.8759 18.3912C20.8315 18.4701 20.7789 18.554 20.7263 18.6329C20.6688 18.7167 20.6096 18.7956 20.557 18.8729C20.4847 18.9715 20.4074 19.0751 20.3285 19.1671C20.2578 19.2641 20.1855 19.3611 20.1066 19.4466C19.9964 19.5764 19.8912 19.6997 19.7811 19.8181C19.7154 19.8954 19.6447 19.9743 19.5723 20.045C19.5017 20.1238 19.4293 20.1945 19.3636 20.2603C19.2534 20.3704 19.1614 20.4559 19.0841 20.5266L18.9033 20.6926C18.877 20.7156 18.8425 20.7288 18.8063 20.7288H17.4057V22.5255H19.1679C19.5625 22.5255 19.9373 22.3858 20.2397 22.1293C20.3433 22.0389 20.7954 21.6477 21.3296 21.0576C21.3477 21.0378 21.3707 21.023 21.397 21.0165L26.2644 19.6093C26.3549 19.583 26.4469 19.6521 26.4469 19.7474Z" fill="white"/>
                  <path d="M47.591 25.6789C46.1446 25.6789 44.815 25.3548 43.6026 24.7065C42.4045 24.0582 41.4474 23.1563 40.7315 22.0007C40.0304 20.831 39.6797 19.5204 39.6797 18.0689C39.6797 16.6173 40.0304 15.3137 40.7315 14.1582C41.4474 13.0026 42.4045 12.1006 43.6026 11.4524C44.815 10.8041 46.1446 10.48 47.591 10.48C49.0374 10.48 50.3597 10.8041 51.5578 11.4524C52.7706 12.1006 53.72 13.0026 54.4067 14.1582C55.1082 15.3137 55.4586 16.6173 55.4586 18.0689C55.4586 19.5204 55.1082 20.831 54.4067 22.0007C53.7056 23.1563 52.7558 24.0582 51.5578 24.7065C50.3597 25.3548 49.0374 25.6789 47.591 25.6789ZM47.591 22.3812C48.8182 22.3812 49.7971 21.9866 50.5277 21.1974C51.273 20.4082 51.6454 19.3654 51.6454 18.0689C51.6454 16.7583 51.273 15.7154 50.5277 14.9403C49.7971 14.1511 48.8182 13.7565 47.591 13.7565C46.3491 13.7565 45.3558 14.1441 44.6106 14.9191C43.88 15.6943 43.5149 16.7441 43.5149 18.0689C43.5149 19.3795 43.88 20.4294 44.6106 21.2186C45.3558 21.9937 46.3491 22.3812 47.591 22.3812Z" fill="#04111D"/>
                  <path d="M61.2924 15.4053C61.6576 14.8557 62.1616 14.4117 62.8044 14.0735C63.4473 13.7353 64.1996 13.5662 65.0617 13.5662C66.0697 13.5662 66.983 13.8128 67.8012 14.306C68.6192 14.7993 69.262 15.5039 69.7296 16.4199C70.2118 17.336 70.4528 18.4 70.4528 19.6119C70.4528 20.8239 70.2118 21.8949 69.7296 22.825C69.262 23.7411 68.6192 24.4527 67.8012 24.9601C66.983 25.4533 66.0697 25.6999 65.0617 25.6999C64.2144 25.6999 63.462 25.5308 62.8044 25.1926C62.1616 24.8544 61.6576 24.4175 61.2924 23.882V29.0399H57.5449V13.7353H61.2924V15.4053ZM66.6396 19.6119C66.6396 18.71 66.3766 18.0054 65.8505 17.498C65.3392 16.9766 64.7036 16.7159 63.944 16.7159C63.199 16.7159 62.5635 16.9766 62.0374 17.498C61.526 18.0194 61.2704 18.7311 61.2704 19.633C61.2704 20.535 61.526 21.2467 62.0374 21.7681C62.5635 22.2895 63.199 22.5502 63.944 22.5502C64.6892 22.5502 65.3248 22.2895 65.8505 21.7681C66.3766 21.2326 66.6396 20.5138 66.6396 19.6119Z" fill="#04111D"/>
                  <path d="M83.9462 19.4428C83.9462 19.781 83.9244 20.1333 83.8805 20.4998H75.3993C75.4578 21.2326 75.6988 21.7963 76.1225 22.1909C76.5609 22.5714 77.094 22.7616 77.7225 22.7616C78.6575 22.7616 79.3074 22.3811 79.6729 21.6201H83.6613C83.4569 22.3952 83.0844 23.0928 82.5436 23.7129C82.0178 24.3329 81.3529 24.8192 80.5494 25.1715C79.7458 25.5238 78.8473 25.6999 77.854 25.6999C76.6559 25.6999 75.5894 25.4533 74.6543 24.9601C73.7193 24.4668 72.9887 23.7622 72.4626 22.8462C71.9369 21.9302 71.6738 20.8591 71.6738 19.633C71.6738 18.407 71.9295 17.336 72.4409 16.4199C72.9666 15.5039 73.6972 14.7993 74.6322 14.306C75.5673 13.8128 76.6412 13.5662 77.854 13.5662C79.0373 13.5662 80.0892 13.8057 81.0095 14.2849C81.9301 14.7641 82.646 15.4475 83.1574 16.3354C83.6834 17.2232 83.9462 18.259 83.9462 19.4428ZM80.1113 18.4915C80.1113 17.8715 79.8921 17.3782 79.4537 17.0118C79.0153 16.6454 78.4674 16.4622 77.8102 16.4622C77.1817 16.4622 76.6486 16.6384 76.2102 16.9907C75.7865 17.343 75.5234 17.8433 75.4213 18.4915H80.1113Z" fill="#04111D"/>
                  <path d="M93.3731 13.6086C94.8048 13.6086 95.9443 14.0596 96.7916 14.9615C97.6537 15.8493 98.0848 17.0754 98.0848 18.6397V25.531H94.359V19.1259C94.359 18.3367 94.1472 17.7237 93.7235 17.2868C93.2998 16.8499 92.7302 16.6315 92.0144 16.6315C91.2982 16.6315 90.7286 16.8499 90.3049 17.2868C89.8812 17.7237 89.6694 18.3367 89.6694 19.1259V25.531H85.9219V13.7355H89.6694V15.2997C90.0492 14.7783 90.5606 14.3696 91.2035 14.0737C91.846 13.7637 92.5692 13.6086 93.3731 13.6086Z" fill="#04111D"/>
                  <path d="M106.257 25.6789C105.132 25.6789 104.124 25.5027 103.232 25.1504C102.341 24.7981 101.625 24.2767 101.085 23.5861C100.559 22.8956 100.281 22.0641 100.252 21.0917H104.24C104.299 21.6414 104.496 22.0641 104.832 22.3601C105.168 22.6419 105.607 22.7829 106.147 22.7829C106.703 22.7829 107.141 22.6631 107.462 22.4235C107.783 22.1698 107.944 21.8246 107.944 21.3877C107.944 21.0213 107.813 20.7183 107.55 20.4787C107.302 20.2391 106.987 20.0418 106.607 19.8868C106.242 19.7318 105.716 19.5556 105.03 19.3583C104.036 19.0624 103.225 18.7664 102.597 18.4705C101.969 18.1746 101.428 17.7377 100.975 17.1599C100.522 16.5821 100.296 15.8281 100.296 14.898C100.296 13.5169 100.815 12.4389 101.852 11.6638C102.889 10.8746 104.24 10.48 105.906 10.48C107.601 10.48 108.967 10.8746 110.004 11.6638C111.042 12.4389 111.597 13.524 111.67 14.9191H107.615C107.586 14.44 107.404 14.0665 107.068 13.7988C106.732 13.5169 106.301 13.376 105.775 13.376C105.322 13.376 104.957 13.4958 104.679 13.7354C104.401 13.9608 104.263 14.292 104.263 14.7289C104.263 15.208 104.496 15.5815 104.964 15.8493C105.431 16.117 106.162 16.4059 107.155 16.716C108.149 17.0401 108.952 17.3501 109.566 17.6461C110.194 17.942 110.735 18.3719 111.188 18.9356C111.641 19.4993 111.867 20.225 111.867 21.1129C111.867 21.9584 111.641 22.7265 111.188 23.417C110.75 24.1076 110.107 24.6572 109.259 25.0659C108.412 25.4745 107.411 25.6789 106.257 25.6789Z" fill="#04111D"/>
                  <path d="M125.7 19.4428C125.7 19.781 125.678 20.1333 125.634 20.4998H117.153C117.212 21.2326 117.453 21.7963 117.876 22.1909C118.315 22.5714 118.848 22.7616 119.476 22.7616C120.411 22.7616 121.062 22.3811 121.427 21.6201H125.415C125.211 22.3952 124.838 23.0928 124.298 23.7129C123.772 24.3329 123.107 24.8192 122.303 25.1715C121.5 25.5238 120.601 25.6999 119.608 25.6999C118.41 25.6999 117.343 25.4533 116.408 24.9601C115.473 24.4668 114.743 23.7622 114.217 22.8462C113.691 21.9302 113.428 20.8591 113.428 19.633C113.428 18.407 113.683 17.336 114.195 16.4199C114.721 15.5039 115.451 14.7993 116.386 14.306C117.321 13.8128 118.395 13.5662 119.608 13.5662C120.791 13.5662 121.843 13.8057 122.764 14.2849C123.684 14.7641 124.4 15.4475 124.911 16.3354C125.437 17.2232 125.7 18.259 125.7 19.4428ZM121.865 18.4915C121.865 17.8715 121.646 17.3782 121.208 17.0118C120.769 16.6454 120.221 16.4622 119.564 16.4622C118.936 16.4622 118.402 16.6384 117.964 16.9907C117.54 17.343 117.277 17.8433 117.175 18.4915H121.865Z" fill="#04111D"/>
                  <path d="M126.932 19.6119C126.932 18.4 127.166 17.336 127.633 16.4199C128.115 15.5039 128.765 14.7993 129.583 14.306C130.402 13.8128 131.315 13.5662 132.323 13.5662C133.185 13.5662 133.937 13.7353 134.58 14.0735C135.238 14.4117 135.742 14.8557 136.092 15.4053V13.7353H139.84V25.5308H136.092V23.8608C135.727 24.4104 135.216 24.8544 134.558 25.1926C133.915 25.5308 133.163 25.6999 132.301 25.6999C131.307 25.6999 130.402 25.4533 129.583 24.9601C128.765 24.4527 128.115 23.7411 127.633 22.825C127.166 21.8949 126.932 20.8239 126.932 19.6119ZM136.092 19.633C136.092 18.7311 135.829 18.0194 135.303 17.498C134.792 16.9766 134.164 16.7159 133.419 16.7159C132.673 16.7159 132.038 16.9766 131.512 17.498C131.001 18.0054 130.745 18.71 130.745 19.6119C130.745 20.5138 131.001 21.2326 131.512 21.7681C132.038 22.2895 132.673 22.5502 133.419 22.5502C134.164 22.5502 134.792 22.2895 135.303 21.7681C135.829 21.2467 136.092 20.535 136.092 19.633Z" fill="#04111D"/>
              </svg>
              <svg xmlns="http://www.w3.org/2000/svg" width="114" height="32" viewBox="0 0 114 32" fill="none">
                  <g clipPath="url(#clip0_858_4579)">
                      <path d="M0 7.01754C0 3.14187 3.14187 0 7.01754 0H24.9825C28.8581 0 32 3.14187 32 7.01754V24.9825C32 28.8581 28.8581 32 24.9825 32H7.01754C3.14187 32 0 28.8581 0 24.9825V7.01754Z" fill="#FEDA03"/>
                      <path fillRule="evenodd" clipRule="evenodd" d="M24.1086 13.396C24.1086 14.9311 23.2118 15.6946 22.2039 15.9599C23.4102 16.3214 24.2832 17.31 24.2832 18.8772V21.7544H19.68V19.0219C19.68 18.186 19.1879 17.8484 18.3466 17.8484H12.8864V21.7544H8.2832V10.2456H19.2198C21.9657 10.2456 24.1086 10.8403 24.1086 13.396ZM12.8884 13.461H19.1114V13.4615C19.1207 13.4612 19.1301 13.461 19.1393 13.461C19.5673 13.461 19.9142 13.8123 19.9142 14.2456C19.9142 14.6789 19.5673 15.0302 19.1393 15.0302C19.1301 15.0302 19.1207 15.03 19.1114 15.0297V15.0302H12.8884V13.461Z" fill="black"/>
                      <path fillRule="evenodd" clipRule="evenodd" d="M95.5839 18.4329C95.5839 21.7905 93.6378 24.1017 90.3358 24.1017C88.9801 24.1017 87.7337 23.5348 87.187 22.6627V23.9272H84.4316V8.49072H87.187V14.1595C87.8211 13.331 89.0019 12.7641 90.3796 12.7641C93.6378 12.7641 95.5839 15.0753 95.5839 18.4329ZM87.012 18.4329C87.012 20.4169 88.171 21.7251 89.9422 21.7251C91.6916 21.7251 92.8506 20.4169 92.8506 18.4329C92.8506 16.4488 91.6916 15.1407 89.9422 15.1407C88.171 15.1407 87.012 16.4488 87.012 18.4329Z" fill="black"/>
                      <path fillRule="evenodd" clipRule="evenodd" d="M56.5769 23.9271L53.2114 17.1029C54.7203 16.3615 55.6167 14.9008 55.6167 13.1783C55.6167 10.4311 53.6706 8.66504 50.6748 8.66504H43.3672L43.3891 23.9271H46.363V17.6697H50.1718L53.122 23.9271H56.5769ZM46.363 11.216H50.2156C51.7463 11.216 52.6209 11.9573 52.6209 13.1783C52.6209 14.3993 51.7463 15.1187 50.2156 15.1187H46.363V11.216Z" fill="black"/>
                      <path fillRule="evenodd" clipRule="evenodd" d="M65.4869 12.9386H68.2421V23.9273H65.4869V22.6627C64.9402 23.5349 63.7157 24.1017 62.338 24.1017C59.0361 24.1017 57.0898 21.7906 57.0898 18.433C57.0898 15.0753 59.0361 12.7642 62.2942 12.7642C63.6719 12.7642 64.8526 13.331 65.4869 14.1596V12.9386ZM59.8233 18.433C59.8233 20.417 60.9822 21.7252 62.7315 21.7252C64.5029 21.7252 65.6618 20.417 65.6618 18.433C65.6618 16.4488 64.5029 15.1407 62.7315 15.1407C60.9822 15.1407 59.8233 16.4488 59.8233 18.433Z" fill="black"/>
                      <path d="M77.8442 12.9386L77.6693 15.5986C77.2758 15.4241 76.7509 15.337 76.2699 15.337C74.7173 15.337 73.3177 16.6233 73.3177 19.8937V23.9273H70.5625V12.9386H73.3177V14.9444C73.8644 13.7017 75.3076 12.7642 76.6415 12.7642C77.0352 12.7642 77.5162 12.8296 77.8442 12.9386Z" fill="black"/>
                      <path d="M82.1224 23.9272H79.3672V12.9385H82.1224V23.9272Z" fill="black"/>
                      <path d="M97.5957 23.9272H100.351V8.49072H97.5957V23.9272Z" fill="black"/>
                      <path fillRule="evenodd" clipRule="evenodd" d="M113.327 18.0623C113.327 15.5113 111.512 12.7642 107.795 12.7642C104.143 12.7642 102.35 15.5768 102.35 18.433C102.35 21.2891 104.296 24.1017 107.948 24.1017C110.528 24.1017 112.452 22.8808 113.065 20.8095L110.484 20.1118C110.2 21.1802 109.282 21.7906 107.991 21.7906C106.417 21.7906 105.345 20.8095 105.105 19.1524H113.283C113.305 18.9344 113.327 18.4547 113.327 18.0623ZM105.171 17.1465C105.477 15.664 106.439 14.8572 107.795 14.8572C109.391 14.8572 110.244 15.8384 110.375 17.1465H105.171Z" fill="black"/>
                      <path d="M80.3516 8C79.6688 8 79.1152 8.5422 79.1152 9.21103V10.017C79.1152 10.6859 79.6688 11.2281 80.3516 11.2281H81.1503C81.8331 11.2281 82.3867 10.6859 82.3867 10.017V9.21103C82.3867 8.5422 81.8331 8 81.1503 8H80.3516Z" fill="black"/>
                  </g>
                  <defs>
                      <clipPath id="clip0_858_4579">
                          <rect width="113.404" height="32" fill="white"/>
                      </clipPath>
                  </defs>
              </svg>
              <svg xmlns="http://www.w3.org/2000/svg" width="112" height="36" viewBox="0 0 112 36" fill="none">
                  <g clipPath="url(#clip0_858_4565)">
                      <path d="M22.3975 12.132C18.3302 12.132 15.1522 15.2195 15.1522 19.3528C15.1522 23.4862 18.2499 26.5473 22.3975 26.5473C26.545 26.5473 29.6966 23.4333 29.6966 19.3264C29.6966 15.2459 26.5989 12.132 22.3975 12.132ZM22.4249 23.5685C20.1087 23.5685 18.4115 21.7697 18.4115 19.3539C18.4115 16.9107 20.0813 15.1128 22.3975 15.1128C24.7411 15.1128 26.4373 16.9381 26.4373 19.3539C26.4373 21.7697 24.7411 23.5685 22.4249 23.5685ZM30.5849 15.2734H32.6052V26.28H35.837V12.4003H30.5849V15.2734ZM7.01863 15.1118C8.71588 15.1118 10.0625 16.1586 10.5737 17.7156H13.9946C13.3747 14.3872 10.6276 12.132 7.04606 12.132C2.97878 12.132 -0.199219 15.2195 -0.199219 19.3539C-0.199219 23.4882 2.8985 26.5483 7.04606 26.5483C10.5473 26.5483 13.3482 24.2932 13.9682 20.9373H10.5737C10.0889 22.4943 8.74228 23.5685 7.04506 23.5685C4.70144 23.5685 3.05906 21.7697 3.05906 19.3539C3.06009 16.9107 4.67603 15.1118 7.01863 15.1118ZM91.9924 18.0113L89.6224 17.6627C88.4914 17.5022 87.6833 17.1261 87.6833 16.2399C87.6833 15.2734 88.7342 14.7906 90.1611 14.7906C91.7233 14.7906 92.7202 15.4614 92.9355 16.5621H96.0599C95.7092 13.7702 93.5546 12.133 90.2424 12.133C86.8214 12.133 84.5592 13.878 84.5592 16.3476C84.5592 18.7095 86.0408 20.0795 89.0299 20.5084L91.3999 20.857C92.5586 21.0176 93.2049 21.4749 93.2049 22.3337C93.2049 23.4344 92.0739 23.8907 90.5117 23.8907C88.5989 23.8907 87.5217 23.1122 87.3602 21.9312H84.182C84.4789 24.6427 86.6061 26.5483 90.4842 26.5483C94.013 26.5483 96.3555 24.9375 96.3555 22.1721C96.3555 19.7025 94.6592 18.4138 91.9924 18.0113ZM34.2211 6.68249C33.0361 6.68249 32.147 7.54128 32.147 8.72223C32.147 9.90318 33.0352 10.762 34.2211 10.762C35.4061 10.762 36.2955 9.90318 36.2955 8.72223C36.2955 7.54128 35.4061 6.68249 34.2211 6.68249ZM81.6505 17.1525C81.6505 14.1463 79.8192 12.133 75.9408 12.133C72.278 12.133 70.2311 13.9857 69.8267 16.8314H73.032C73.1936 15.7307 74.0555 14.8181 75.887 14.8181C77.5305 14.8181 78.3383 15.5427 78.3383 16.4289C78.3383 17.5835 76.8564 17.8782 75.0252 18.0662C72.5474 18.3345 69.477 19.1933 69.477 22.415C69.477 24.9121 71.3358 26.5219 74.2986 26.5219C76.6145 26.5219 78.0689 25.5554 78.7967 24.0248C78.9045 25.3938 79.928 26.28 81.3558 26.28H83.2411V23.4079H81.6514V17.1525H81.6505ZM78.4724 20.6426C78.4724 22.4953 76.8564 23.8642 74.8899 23.8642C73.6777 23.8642 72.6542 23.3541 72.6542 22.2808C72.6542 20.9119 74.2974 20.5358 75.8058 20.3753C77.2602 20.2411 78.068 19.9189 78.4724 19.301V20.6426ZM61.3161 12.132C59.5111 12.132 58.003 12.884 56.9258 14.1453V6.54834H53.6939V26.28H56.8717V24.4547C57.9489 25.7698 59.4849 26.5483 61.3161 26.5483C65.1942 26.5483 68.1305 23.4882 68.1305 19.3539C68.1305 15.2195 65.1405 12.132 61.3161 12.132ZM60.8314 23.5685C58.5152 23.5685 56.818 21.7697 56.818 19.3539C56.818 16.9381 58.5417 15.1128 60.8577 15.1128C63.2014 15.1128 64.8436 16.9117 64.8436 19.3539C64.8436 21.7697 63.1474 23.5685 60.8314 23.5685ZM45.9636 12.132C43.863 12.132 42.4889 12.9907 41.6811 14.1991V12.4003H38.4755V26.279H41.7074V18.736C41.7074 16.6149 43.0539 15.1118 45.047 15.1118C46.9058 15.1118 48.0633 16.4269 48.0633 18.3335V26.28H51.2952V18.0926C51.2964 14.6016 49.4924 12.132 45.9636 12.132ZM111.762 18.8976C111.762 14.9248 108.853 12.133 104.947 12.133C100.8 12.133 97.7561 15.247 97.7561 19.3539C97.7561 23.6762 101.015 26.5483 105.001 26.5483C108.368 26.5483 111.008 24.5615 111.68 21.7432H108.313C107.829 22.978 106.644 23.6762 105.054 23.6762C102.98 23.6762 101.418 22.3876 101.068 20.1324H111.761V18.8976H111.762ZM101.257 17.8233C101.77 15.8903 103.224 14.9512 104.894 14.9512C106.725 14.9512 108.125 15.998 108.449 17.8233H101.257Z" fill="#0052FF"/>
                  </g>
                  <defs>
                      <clipPath id="clip0_858_4565">
                          <rect width="112" height="36" fill="white"/>
                      </clipPath>
                  </defs>
              </svg>
          </div>
            }
      />
          <ComingSoonSection
              sectionTargetSvgPath={"M7.1875 10C7.1875 10.1726 7.04759 10.3125 6.875 10.3125C6.70241 10.3125 6.5625 10.1726 6.5625 10C6.5625 9.82741 6.70241 9.6875 6.875 9.6875C7.04759 9.6875 7.1875 9.82741 7.1875 10ZM7.1875 10H6.875M10.3125 10C10.3125 10.1726 10.1726 10.3125 10 10.3125C9.82741 10.3125 9.6875 10.1726 9.6875 10C9.6875 9.82741 9.82741 9.6875 10 9.6875C10.1726 9.6875 10.3125 9.82741 10.3125 10ZM10.3125 10H10M13.4375 10C13.4375 10.1726 13.2976 10.3125 13.125 10.3125C12.9524 10.3125 12.8125 10.1726 12.8125 10C12.8125 9.82741 12.9524 9.6875 13.125 9.6875C13.2976 9.6875 13.4375 9.82741 13.4375 10ZM13.4375 10H13.125M17.5 10C17.5 13.797 14.1421 16.875 10 16.875C9.26044 16.875 8.54588 16.7769 7.87098 16.5941C7.05847 17.1649 6.06834 17.5 5 17.5C4.83398 17.5 4.6698 17.4919 4.50806 17.4761C4.375 17.4631 4.24316 17.4449 4.11316 17.4216C4.5161 16.9461 4.80231 16.3689 4.92824 15.734C5.00378 15.3531 4.81725 14.9832 4.53903 14.7124C3.27475 13.4818 2.5 11.8238 2.5 10C2.5 6.20304 5.85786 3.125 10 3.125C14.1421 3.125 17.5 6.20304 17.5 10Z"}
              sectionTargetClientMessage={"For wallets and dApps"}
              sectionHeader={<Fragment>Identify dangerous name<br />configurations</Fragment>}
              sectionDescription={"Changes in ownership of ENS names does not automatically update deposit addresses. This can result in considerable harm and lead to irreversible losses. " +
                  "ENS Name Healthchecks instantly detect all potential issues, including warnings for ENS resolver records that are improperly formatted."}
              sectionBackgroundName={"bg-purple_background"}
              isTextOnTheLeft={true}
          />
          <ComingSoonSection
              sectionTargetSvgPath={"M7.1875 10C7.1875 10.1726 7.04759 10.3125 6.875 10.3125C6.70241 10.3125 6.5625 10.1726 6.5625 10C6.5625 9.82741 6.70241 9.6875 6.875 9.6875C7.04759 9.6875 7.1875 9.82741 7.1875 10ZM7.1875 10H6.875M10.3125 10C10.3125 10.1726 10.1726 10.3125 10 10.3125C9.82741 10.3125 9.6875 10.1726 9.6875 10C9.6875 9.82741 9.82741 9.6875 10 9.6875C10.1726 9.6875 10.3125 9.82741 10.3125 10ZM10.3125 10H10M13.4375 10C13.4375 10.1726 13.2976 10.3125 13.125 10.3125C12.9524 10.3125 12.8125 10.1726 12.8125 10C12.8125 9.82741 12.9524 9.6875 13.125 9.6875C13.2976 9.6875 13.4375 9.82741 13.4375 10ZM13.4375 10H13.125M17.5 10C17.5 13.797 14.1421 16.875 10 16.875C9.26044 16.875 8.54588 16.7769 7.87098 16.5941C7.05847 17.1649 6.06834 17.5 5 17.5C4.83398 17.5 4.6698 17.4919 4.50806 17.4761C4.375 17.4631 4.24316 17.4449 4.11316 17.4216C4.5161 16.9461 4.80231 16.3689 4.92824 15.734C5.00378 15.3531 4.81725 14.9832 4.53903 14.7124C3.27475 13.4818 2.5 11.8238 2.5 10C2.5 6.20304 5.85786 3.125 10 3.125C14.1421 3.125 17.5 6.20304 17.5 10Z"}
              sectionTargetClientMessage={"For wallets and dApps"}
              sectionHeader={<Fragment>Identify dangerous name<br />configurations</Fragment>}
              sectionDescription={"Changes in ownership of ENS names does not automatically update deposit addresses. This can result in considerable harm and lead to irreversible losses. " +
                  "ENS Name Healthchecks instantly detect all potential issues, including warnings for ENS resolver records that are improperly formatted."}
              sectionBackgroundName={"bg-green_background"}
              isTextOnTheLeft={false}
          />
      </div>
        <RoadMap />
        <ExitSection />
      <Footer />

      <div className="fixed inset-0 z-0 h-full w-full bg-[radial-gradient(#DDDDDD_1px,transparent_1px)] [background-size:24px_24px] opacity-70"></div>
    </>
  );
}

type CodeSnippetProps = {
    codeSnippet: string;
}

function CodeSnippet(props: CodeSnippetProps) {
    const figmaTheme: PrismTheme = {
        plain: {
            backgroundColor: "transparent",
            color: "hsl(220, 14%, 71%)",
            textShadow: "0 1px rgba(0, 0, 0, 0.3)",
        },
        styles: [
            {
                types: ["comment", "prolog", "cdata"],
                style: {
                    color: "rgba(255,255,255, 1)",
                },
            },
            {
                types: ["doctype", "punctuation", "entity"],
                style: {
                    color: "rgba(255,255,255, 1)",
                },
            },
            {
                types: [
                    "attr-name",
                    "class-name",
                    "maybe-class-name",
                    "boolean",
                    "constant",
                    "number",
                    "atrule",
                ],
                style: { color: "rgba(255,255,255, 1)" },
            },
            {
                types: ["keyword"],
                style: { color: "rgba(255,255,255, 1)" },
            },
            {
                types: ["property", "tag", "symbol", "deleted", "important"],
                style: {
                    color: "rgba(255,255,255, 1)",
                },
            },

            {
                types: [
                    "selector",
                    "string",
                    "char",
                    "builtin",
                    "inserted",
                    "regex",
                    "attr-value",
                ],
                style: {
                    color: "rgba(255,255,255, 1)",
                },
            },
            {
                types: ["variable", "operator", "function"],
                style: {
                    color: "rgba(255,255,255, 1)",
                },
            },
            {
                types: ["url"],
                style: {
                    color: "rgba(255,255,255, 1)",
                },
            },
            {
                types: ["deleted"],
                style: {
                    textDecorationLine: "line-through",
                },
            },
            {
                types: ["inserted"],
                style: {
                    textDecorationLine: "underline",
                },
            },
            {
                types: ["italic"],
                style: {
                    fontStyle: "italic",
                },
            },
            {
                types: ["important", "bold"],
                style: {
                    fontWeight: "bold",
                },
            },
            {
                types: ["important"],
                style: {
                    color: "rgba(255,255,255, 1)",
                },
            },
        ],
    }
    return (
        <div className="hidden mobile:block bg-black rounded-xl pb-4 max-w-full h-fit bg-gradient-to-b from-figma-black to-black z-10">
        <div className="flex flex-col gap-2.5 px-2.5 py-3">
            <div className="flex justify-start gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10" fill="none">
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                </svg>
                <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10" fill="none">
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                </svg>
                <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10" fill="none">
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                    <circle cx="5" cy="5" r="5" fill="#434446"/>
                </svg>
            </div>
        </div>
        <hr className="border-code-gray"/>
        <div className="py-4 px-5 max-w-full">
            <Highlight
                theme={figmaTheme}
                code={`${props.codeSnippet}`}
                language="html"
            >
                {({ className, style, tokens, getLineProps, getTokenProps }) => (
                    <pre className={"w-full overflow-x-auto pb-4"} style={style}>
                                {tokens.map((line, i) => (
                                    <div key={i} {...getLineProps({ line })}>
                                        <span className="pr-8 text-code-gray">{i + 1}</span>
                                        {line.map((token, key) => (
                                            <span key={key} {...getTokenProps({ token })} />
                                        ))}
                                    </div>
                                ))}
                              </pre>
                )}
            </Highlight>
        </div>
    </div>);
}

type ReadySectionProps = {
    sectionTargetClientMessage: string;
    sectionTargetSvgPath: string;
    sectionHeader: React.ReactNode;
    sectionDescription: string;
    sectionBackgroundName: string;
    isCodeOnTheLeft: boolean;
    codeSnippet: string;
    integrationsPanel?: React.ReactNode;
}

function ReadySection(props: ReadySectionProps){
  return (
      <section className={`w-full h-full py-24 flex flex-col items-center justify-center`}>
          <div className="max-w-full mx-auto px-6 flex flex-col items-center gap-3">
          <div className="flex flex-col gap-5 items-center w-1/2">
            <div className="inline-flex px-4 py-2 bg-black bg-opacity-5 rounded-3xl gap-2 justify-center items-center z-10">
              <svg
                  width="20"
                  height="20"
                  viewBox="0 0 20 20"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
              >
                <path
                    d={props.sectionTargetSvgPath}
                    stroke="#808080"
                    strokeWidth="1.5"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                />
              </svg>
              <span className="text-black text-center text-sm not-italic font-medium z-10">
                      {props.sectionTargetClientMessage}
                    </span>
            </div>

            <h1 className="text-black text-center text-4xl font-bold not-italic z-10">
                {props.sectionHeader}
            </h1>

            <p className="text-gray-500 text-lg not-italic font-normal text-center w-4/5 z-10">
                {props.sectionDescription}
            </p>
          </div>
              {props.isCodeOnTheLeft ? (
                  <div className={`flex sm:flex-col xl:flex-row justify-center rounded-none items-center gap-10 w-full h-3/4 py-16 px-10 ${props.sectionBackgroundName} bg-center bg-no-repeat bg-cover` }>
                      {props.integrationsPanel ? (
                          <div className={"flex flex-col w-full h-full justify-between items-center gap-7"}>
                              <CodeSnippet codeSnippet={props.codeSnippet}/>
                              <div className={"inline-flex items-center gap-6"}>
                                  {props.integrationsPanel}
                              </div>
                          </div>
                      ) : (<CodeSnippet codeSnippet={props.codeSnippet}/>)}
                      <Image className={"z-10"} src={chat_img} alt={"chat image for layout testing"} width={440} height={418}/>
                  </div>
              ) : (
                  <div className={`flex flex-col xl:flex-row justify-center items-center gap-10 w-full h-3/4 py-16 px-10 rounded-none ${props.sectionBackgroundName} bg-center bg-no-repeat bg-cover`}>
                    <Image className={"z-10"} src={chat_img} alt={"chat image for layout testing"} width={440} height={418}/>
                      {props.integrationsPanel ? (
                          <div className={"flex flex-col w-full h-full justify-between items-center gap-7"}>
                              <CodeSnippet codeSnippet={props.codeSnippet}/>
                              {props.integrationsPanel}
                          </div>
                      ) : (<CodeSnippet codeSnippet={props.codeSnippet}/>)}
                  </div>
              )}
        </div>
  </section>);
}

type ComingSoonSectionProps = {
    sectionTargetClientMessage: string;
    sectionTargetSvgPath: string;
    sectionHeader: React.ReactNode;
    sectionDescription: string;
    sectionBackgroundName: string;
    isTextOnTheLeft: boolean;
}

function ComingSoonSection(props: ComingSoonSectionProps) {
    return (
        <section className={`w-full h-1/2 py-24 flex sm:flex-col xl:flex-row items-center justify-center gap-10`}>
            {!props.isTextOnTheLeft &&
                <div className={`w-1/2 ${props.sectionBackgroundName} rounded-none px-20 py-24 bg-origin-border bg-center bg-no-repeat bg-cover flex-shrink-0`}>
                    <Image className={"relative z-10"}
                           src={chat_img} alt={"chat image for layout testing"}
                           width={440} height={418} />
                </div>
                }
            <div className="flex flex-col gap-5 items-start w-1/2 h-full">
                <div className="inline-flex px-4 py-2 bg-black bg-opacity-5 rounded-3xl gap-2 justify-center items-center z-10">
                    <svg
                        width="20"
                        height="20"
                        viewBox="0 0 20 20"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            d={props.sectionTargetSvgPath}
                            stroke="#808080"
                            strokeWidth="1.5"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                        />
                    </svg>
                    <span className="text-black text-center text-sm not-italic font-medium z-10">
                        {props.sectionTargetClientMessage}
                    </span>
                </div>
                <h1 className="text-black text-left text-4xl font-bold not-italic z-10">
                    {props.sectionHeader}
                    <span className="relative -top-1 inline-flex items-center justify-center rounded-xl bg-green-100 mx-3 px-3 py-0.5 text-center font-medium text-green-800 font-medium not-italic text-sm">
                        Coming soon
                    </span>
                </h1>
                <p className="text-gray-500 text-lg not-italic font-normal w-4/5 z-10">
                    {props.sectionDescription}
                </p>

            </div>
            {props.isTextOnTheLeft && <div className={`w-1/2 ${props.sectionBackgroundName} rounded-none px-20 py-24 bg-origin-border bg-opacity-20 bg-center bg-no-repeat bg-contain flex-shrink-0`}>
                <Image className={"relative z-10"}
                       src={chat_img} alt={"chat image for layout testing"} width={440} height={418} />
            </div>}
        </section>
    );
}

function Footer(){
    return (
        <footer className={"relative bot-0 w-full h-fit flex flex-row justify-between py-6 px-28 items-center z-10 bg-white"}>
            <p className={"not-italic font-normal text-gray-500 text-footer_text"}>© NameHash Labs. All Rights Reserved</p>
            <div className={"flex flex-row justify-between gap-3"}>
                <a href={"https://twitter.com/?lang=pl"}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                        <path d="M13.5222 10.7749L19.4785 4H18.0671L12.8952 9.88256L8.76437 4H4L10.2466 12.8955L4 20H5.41155L10.8732 13.7878L15.2356 20H20L13.5218 10.7749H13.5222ZM11.5889 12.9738L10.956 12.0881L5.92015 5.03974H8.0882L12.1522 10.728L12.7851 11.6137L18.0677 19.0075H15.8997L11.5889 12.9742V12.9738Z" fill="#AFAFAF"/>
                    </svg>
                </a>
                <a href={"https://github.com/namehash"}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                        <path fillRule="evenodd" clipRule="evenodd" d="M12.0413 2.25952C6.51859 2.25952 2 6.77811 2 12.3008C2 16.7357 4.84504 20.5012 8.86156 21.8401C9.36363 21.9238 9.53099 21.5891 9.53099 21.338C9.53099 21.087 9.53099 20.5012 9.53099 19.6645C6.76962 20.2502 6.18388 18.3256 6.18388 18.3256C5.76549 17.1541 5.09607 16.8194 5.09607 16.8194C4.09194 16.2337 5.09607 16.2337 5.09607 16.2337C6.1002 16.3174 6.60227 17.2378 6.60227 17.2378C7.52272 18.744 8.94524 18.3256 9.53099 18.0746C9.61466 17.4052 9.8657 16.9868 10.2004 16.7357C7.94111 16.4847 5.59814 15.6479 5.59814 11.7988C5.59814 10.711 6.01653 9.79051 6.60227 9.12109C6.60227 8.78637 6.18388 7.78224 6.76962 6.4434C6.76962 6.4434 7.6064 6.19237 9.53099 7.44753C10.3678 7.1965 11.2045 7.11282 12.0413 7.11282C12.8781 7.11282 13.7149 7.1965 14.5516 7.44753C16.4762 6.10869 17.313 6.4434 17.313 6.4434C17.8987 7.86592 17.4804 8.87005 17.3967 9.12109C18.0661 9.79051 18.4008 10.711 18.4008 11.7988C18.4008 15.6479 16.0578 16.4847 13.7985 16.7357C14.1333 17.0705 14.468 17.6562 14.468 18.5767C14.468 19.9155 14.468 21.0033 14.468 21.338C14.468 21.5891 14.6353 21.9238 15.1374 21.8401C19.1539 20.5012 21.9989 16.7357 21.9989 12.3008C22.0826 6.77811 17.564 2.25952 12.0413 2.25952Z" fill="#AFAFAF"/>
                    </svg>
                </a>
            </div>
            <p className={"not-italic font-normal text-gray-500 text-footer_text"}>Made with  ❤  by <a href={"https://namehash.io/"}><u className={"text-black"}>NameHash</u></a></p>
        </footer>
    );
}

function Header() {
    return (
        <header className={"relative top-0 w-full h-[70px] flex flex-row justify-between px-28 py-4 z-10 border-b border-gray-300"}>
            <div className={"flex flex-row gap-7 justify-between items-center"}>
                <div className={"flex flex-row justify-between items-center gap-1"}>
                    <p className={"text-black not-italic font-bold text-[27.816px] leading-[27.816px] tracking-[-1.113px]"}>NameGuard</p>
                    <div className={"relative -top-1.5 bg-black w-fit h-fit p-[2.8px] rounded-[2.8px] flex-shrink-0"}>
                        <p className={"text-white not-italic text-[8.409px] font-semibold leading-[9.343px] pb-[0.5px]"}>beta</p>
                    </div>
                </div>
                <div className={"bg-white border border-gray-300 text-gray-400 py-[9px] px-[13px] rounded-md"}>
                    Here will be search bar
                </div>
            </div>
            <div className={"flex flex-row justify-between items-center gap-5"}>
                <a href={"https://github.com/namehash"}>
                    {/*the link should be later changed to docs*/}
                    <p className={"not-italic text-black font-medium text-sm mx-[10px] my-[9px]"}>Docs</p>
                </a>
                <a href={"https://github.com/namehash"}>
                    <div className={"flex flex-row justify-between items-center gap-2 py-[7px] px-[10px]"}>
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <path fillRule="evenodd" clipRule="evenodd" d="M12.0413 2.25928C6.51859 2.25928 2 6.77787 2 12.3006C2 16.7355 4.84504 20.501 8.86156 21.8398C9.36363 21.9235 9.53099 21.5888 9.53099 21.3378C9.53099 21.0867 9.53099 20.501 9.53099 19.6642C6.76962 20.25 6.18388 18.3254 6.18388 18.3254C5.76549 17.1539 5.09607 16.8192 5.09607 16.8192C4.09194 16.2334 5.09607 16.2334 5.09607 16.2334C6.1002 16.3171 6.60227 17.2376 6.60227 17.2376C7.52272 18.7438 8.94524 18.3254 9.53099 18.0743C9.61466 17.4049 9.8657 16.9865 10.2004 16.7355C7.94111 16.4845 5.59814 15.6477 5.59814 11.7985C5.59814 10.7107 6.01653 9.79026 6.60227 9.12084C6.60227 8.78613 6.18388 7.782 6.76962 6.44316C6.76962 6.44316 7.6064 6.19212 9.53099 7.44729C10.3678 7.19626 11.2045 7.11258 12.0413 7.11258C12.8781 7.11258 13.7149 7.19626 14.5516 7.44729C16.4762 6.10845 17.313 6.44316 17.313 6.44316C17.8987 7.86568 17.4804 8.86981 17.3967 9.12084C18.0661 9.79026 18.4008 10.7107 18.4008 11.7985C18.4008 15.6477 16.0578 16.4845 13.7985 16.7355C14.1333 17.0702 14.468 17.656 14.468 18.5764C14.468 19.9153 14.468 21.0031 14.468 21.3378C14.468 21.5888 14.6353 21.9235 15.1374 21.8398C19.1539 20.501 21.9989 16.7355 21.9989 12.3006C22.0826 6.77787 17.564 2.25928 12.0413 2.25928Z" fill="#0F172A"/>
                            </svg>
                            <p className={"not-italic text-black font-medium text-sm"}>Github</p>
                    </div>
                </a>
            </div>
        </header>
    );
}

function QuickStartSection() {
    return (
        <section className={"w-full h-full py-24 flex flex-col items-center justify-center mb-5"}>
            <div className={"inline-flex flex-col items-center gap-5"}>
                <div className={"flex flex-col gap-2 w-fit h-fit z-10"}>
                    <p className={"text-center not-italic uppercase text-gray-500 text-xs tracking-[0.3px] font-medium"}>An open source public good</p>
                    <h1 className="text-black text-center text-5xl leading-[52px] font-bold not-italic">
                        Protect your community<br />with NameGuard for ENS
                    </h1>
                </div>
                <p className={"text-center not-italic font-normal text-gray-500 text-base"}>
                    Guard your users from heartbreak and encourage best practice usage of ENS
                </p>
                <div className={"flex items-center gap-3 py-[13px] pl-[20px] pr-[16px] rounded-lg bg-black bg-opacity-5 border border-gray-300"}>
                    <p>npm init @nameguard/nameguard@latest</p>
                    <div className={"w-fit h-fit z-10 cursor-pointer"} onClick={() => navigator.clipboard.writeText("npm init @nameguard/nameguard@latest")}>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5"
                             stroke="#808080" className="w-6 h-6">
                            <path strokeLinecap="round" strokeLinejoin="round"
                                  d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"/>
                        </svg>
                    </div>
                </div>
                <button className={"flex justify-center items-center px-[25px] py-[13px] rounded-lg bg-black z-10 sm:shadow-sm"} onClick={() => {window.location.href = "https://github.com/namehash";}}> {/* Should be replaced with url to the docs! */}
                    <p className={"text-white not-italic font-medium text-base"}>View the docs</p>
                </button>
            </div>
        </section>
    );
}

function ExitSection() {
    return (
        <section className={"w-full h-1/2 py-24 flex flex-col items-center justify-center bg-exit_section_background bg-opacity-10 bg-no-repeat bg-bottom bg-contain"}>
            <div className={"inline-flex flex-col items-start p-[10px] gap-[10px] z-10"}>
                <div className={"flex flex-col items-center gap-5"}>
                    <div>
                        <h1 className={"text-black not-italic text-center text-4xl leading-[52px] font-bold"}>Search for any ENS name to generate a<br />NameGuard report</h1>
                        <p className={"text-center text-gray-500 font-normal not-italic text-lg leading-7"}>Share NameGuard reports with frENS. Together we can make web3 safer.</p>
                    </div>
                    <div className={"w-full h-fit bg-white border border-gray-300 text-gray-400 py-[9px] px-[13px] rounded-md"}>
                        Here will be search bar
                    </div>
                </div>
            </div>
        </section>
    );
}

function RoadMap() {
    const  classNames = (...classes) => {
        return classes.filter(Boolean).join(' ')
    }

    const activity = [
        { id: 1, type: 'created', person: { name: 'Chelsea Hagon' }, date: '7d ago', dateTime: '2023-01-23T10:32' },
        { id: 2, type: 'edited', person: { name: 'Chelsea Hagon' }, date: '6d ago', dateTime: '2023-01-23T11:03' },
        { id: 3, type: 'sent', person: { name: 'Chelsea Hagon' }, date: '6d ago', dateTime: '2023-01-23T11:24' },
        {
            id: 4,
            type: 'commented',
            person: {
                name: 'Chelsea Hagon',
            },
            comment: 'Called client, they reassured me the invoice would be paid by the 25th.',
            date: '3d ago',
            dateTime: '2023-01-23T15:56',
        },
        { id: 5, type: 'viewed', person: { name: 'Alex Curren' }, date: '2d ago', dateTime: '2023-01-24T09:12' },
        { id: 6, type: 'paid', person: { name: 'Alex Curren' }, date: '1d ago', dateTime: '2023-01-24T09:20' },
    ];

    return (
        <section className={"relative bg-white w-full h-full py-24 flex flex-col items-center justify-center gap-12 z-10"}>
            <div className={"inline-flex h-fit w-2/3 flex-col items-center gap-2 z-10"}>
                <h1 className={"text-black text-center not-italic font-bold text-4xl leading-[52px]"}>
                    NameGuard roadmap
                </h1>
                <p className={"text-center text-gray-500 text-base leading-7 font-normal not-italic"}>
                    NameGuard has a mission to keep the ENS community safe and encourage optimal use of ENS names.
                </p>
            </div>
            <div className={""}>
                <ul role="list" className="space-y-6 w-full h-full">
                    {activity.map((activityItem, activityItemIdx) => (
                        <li key={activityItem.id} className="relative flex gap-x-4"> {/* Here we can manipulate height but we should really change sizes of it's children*/}
                            <div
                                className={classNames(
                                    activityItemIdx === activity.length - 1 ? 'h-6' : '-bottom-6',
                                    'absolute left-0 top-0 flex w-6 justify-center'
                                )}
                            >
                                <div className="w-px bg-gray-200" /> {/* Here is the color of the 'connection' - in completed it has to be black*/}
                            </div>
                            {activityItem.type === 'commented' ? (
                                <>
                                    {/*<Image*/}
                                    {/*    src={activityItem.person.imageUrl}*/}
                                    {/*    alt=""*/}
                                    {/*    className="relative mt-3 h-6 w-6 flex-none rounded-full bg-gray-50"*/}
                                    {/*/>*/}
                                    <div className="relative flex h-6 w-6 flex-none items-center justify-center bg-white">
                                        {activityItem.type === 'paid' ? (
                                            <>
                                            <CheckCircleIcon className="h-6 w-6 text-indigo-600" aria-hidden="true" />
                                            {/*<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"*/}
                                            {/*     strokeWidth="1.5" stroke="currentColor" className="w-6 h-6">*/}
                                            {/*    <path strokeLinecap="round" strokeLinejoin="round"*/}
                                            {/*          d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>*/}
                                            {/*</svg>*/}

                                            </>
                                        ) : (
                                            <div className="h-1.5 w-1.5 rounded-full bg-gray-100 ring-1 ring-gray-300" />
                                        )}
                                    </div>
                                    <div className="flex-auto rounded-md p-3 ring-1 ring-inset ring-gray-200 w-full">
                                        <div className="flex justify-between gap-x-4">
                                            <div className="py-0.5 text-xs leading-5 text-gray-500">
                                                <span className="font-medium text-gray-900">{activityItem.person.name}</span> commented
                                            </div>
                                            <time dateTime={activityItem.dateTime} className="flex-none py-0.5 text-xs leading-5 text-gray-500">
                                                {activityItem.date}
                                            </time>
                                        </div>
                                        <p className="text-sm leading-6 text-gray-500">{activityItem.comment}</p>
                                    </div>
                                </>
                            ) : (
                                <>
                                    <div className="relative flex h-6 w-6 flex-none items-center justify-center bg-white">
                                        {activityItem.type === 'paid' ? (
                                            <CheckCircleIcon className="h-6 w-6 text-black" aria-hidden="true" />
                                        ) : (
                                            <div className="h-1.5 w-1.5 rounded-full bg-gray-100 ring-1 ring-gray-300" />
                                        )}
                                    </div>
                                    <p className="flex-auto py-0.5 text-xs leading-5 text-gray-500">
                                        <span className="font-medium text-gray-900">{activityItem.person.name}</span> {activityItem.type} the
                                        invoice.
                                    </p>
                                    <time dateTime={activityItem.dateTime} className="flex-none py-0.5 text-xs leading-5 text-gray-500">
                                        {activityItem.date}
                                    </time>
                                </>
                            )}
                        </li>
                    ))}
                </ul>
            </div>
        </section>
    );
}
